// <auto-generated />
using System;
using CoreLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreLibrary.Migrations
{
    [DbContext(typeof(EventCorpContext))]
    [Migration("20250418013127_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoreLibrary.Models.CategoriaModel", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UsuarioRegistroId")
                        .HasColumnType("int");

                    b.HasKey("IdCategoria");

                    b.HasIndex("UsuarioRegistroId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            IdCategoria = 1,
                            Descripcion = "Eventos de tipo conferencia.",
                            Estado = true,
                            FechaRegistro = new DateTime(2025, 4, 17, 19, 31, 26, 878, DateTimeKind.Local).AddTicks(6649),
                            Nombre = "Conferencia",
                            UsuarioRegistroId = 1
                        },
                        new
                        {
                            IdCategoria = 2,
                            Descripcion = "Eventos de tipo taller.",
                            Estado = true,
                            FechaRegistro = new DateTime(2025, 4, 17, 19, 31, 26, 878, DateTimeKind.Local).AddTicks(6651),
                            Nombre = "Taller",
                            UsuarioRegistroId = 1
                        });
                });

            modelBuilder.Entity("CoreLibrary.Models.ErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StackTrace")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Errores");
                });

            modelBuilder.Entity("CoreLibrary.Models.EventoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("CupoMaximo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UsuarioRegistroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UsuarioRegistroId");

                    b.ToTable("Eventos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            CupoMaximo = 100,
                            Descripcion = "Evento que reúne a expertos en tecnología para discutir innovaciones recientes.",
                            Duracion = 120,
                            Fecha = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaRegistro = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hora = new TimeSpan(0, 14, 0, 0, 0),
                            Titulo = "Conferencia sobre Innovación Tecnológica",
                            Ubicacion = "Centro de Convenciones, San José",
                            UsuarioRegistroId = 3
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 2,
                            CupoMaximo = 50,
                            Descripcion = "Taller práctico sobre tecnologías modernas para el desarrollo web.",
                            Duracion = 180,
                            Fecha = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaRegistro = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hora = new TimeSpan(0, 9, 0, 0, 0),
                            Titulo = "Taller de Desarrollo Web",
                            Ubicacion = "Auditorio Universidad Fidélitas",
                            UsuarioRegistroId = 3
                        });
                });

            modelBuilder.Entity("CoreLibrary.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contrasena = "Admin123",
                            Correo = "admin@eventcorp.com",
                            NombreCompleto = "Administrador General",
                            NombreUsuario = "admin",
                            Rol = 1,
                            Telefono = "+50688888888"
                        },
                        new
                        {
                            Id = 2,
                            Contrasena = "Organizador123",
                            Correo = "organizador@eventcorp.com",
                            NombreCompleto = "Organizador de Eventos",
                            NombreUsuario = "organizador",
                            Rol = 2,
                            Telefono = "+50677777777"
                        },
                        new
                        {
                            Id = 3,
                            Contrasena = "Usuario123",
                            Correo = "usuario1@eventcorp.com",
                            NombreCompleto = "Usuario1 Regular",
                            NombreUsuario = "usuario1",
                            Rol = 3,
                            Telefono = "+50666666666"
                        },
                        new
                        {
                            Id = 4,
                            Contrasena = "Usuario123",
                            Correo = "usuario2@eventcorp.com",
                            NombreCompleto = "Usuario2 Regular",
                            NombreUsuario = "usuario2",
                            Rol = 3,
                            Telefono = "+50666666664"
                        });
                });

            modelBuilder.Entity("CoreLibrary.Models.CategoriaModel", b =>
                {
                    b.HasOne("CoreLibrary.Models.UsuarioModel", "UsuarioRegistro")
                        .WithMany("CategoriasRegistradas")
                        .HasForeignKey("UsuarioRegistroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UsuarioRegistro");
                });

            modelBuilder.Entity("CoreLibrary.Models.ErrorLog", b =>
                {
                    b.HasOne("CoreLibrary.Models.UsuarioModel", "Usuario")
                        .WithMany("Errores")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CoreLibrary.Models.EventoModel", b =>
                {
                    b.HasOne("CoreLibrary.Models.CategoriaModel", "Categoria")
                        .WithMany("Eventos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreLibrary.Models.UsuarioModel", "UsuarioRegistro")
                        .WithMany("EventosRegistrados")
                        .HasForeignKey("UsuarioRegistroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("UsuarioRegistro");
                });

            modelBuilder.Entity("CoreLibrary.Models.CategoriaModel", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("CoreLibrary.Models.UsuarioModel", b =>
                {
                    b.Navigation("CategoriasRegistradas");

                    b.Navigation("Errores");

                    b.Navigation("EventosRegistrados");
                });
#pragma warning restore 612, 618
        }
    }
}
